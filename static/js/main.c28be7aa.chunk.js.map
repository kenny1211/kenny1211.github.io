{"version":3,"sources":["components/Appbar.js","components/About.js","components/Footer.js","components/PortfolioTooltip.js","components/Portfolio.js","components/ContactPage.js","App.js","serviceWorker.js","index.js"],"names":["navItem","display","Appbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeState","setState","isOpen","toggle","bind","assertThisInitialized","state","react_default","a","createElement","Navbar","style","background","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","react_router_dom","color","to","target","Component","About","position","Card","CardBody","CardText","textAlign","Footer","rel","class","PortfolioTooltip","tooltipOpen","id","Tooltip","trigger","placement","Portfolio","projects","map","project","alignContent","marginTop","key","borderColor","CardLink","link","icon","width","CardTitle","name","components_PortfolioTooltip","ContactPage","inputStyle","borderBottomColor","marginBottom","Form","action","method","FormGroup","Label","htmlFor","Input","type","Button","value","App","components_Appbar","react_router","exact","path","component","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c28be7aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink, NavbarBrand } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nconst navItem = {\r\n  display: 'inline'\r\n};\r\nclass Appbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  changeState = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar style={{ background: 'transparent' }} light expand=\"md\">\r\n          <NavbarBrand />\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem className=\"ml-auto mr-2\" style={navItem}>\r\n                <NavLink href=\"#\">\r\n                  <Link\r\n                    // onClick={this.changeState}\r\n                    className=\"appbar-link\"\r\n                    style={{ color: 'black' }}\r\n                    to=\"/\"\r\n                  >\r\n                    About\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"ml-auto mr-2\">\r\n                <NavLink href=\"#\">\r\n                  <Link\r\n                    // onClick={this.toggle}\r\n                    className=\"appbar-link\"\r\n                    style={{ color: 'black' }}\r\n                    to=\"/portfolio\"\r\n                  >\r\n                    Portfolio\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"ml-auto mr-2\">\r\n                <NavLink\r\n                  // onClick={this.toggle}\r\n                  style={{ color: 'black' }}\r\n                  className=\"appbar-link\"\r\n                  href=\"https://docs.google.com/document/d/1VR9c0vXJVXMUT40QphJVvAZUjvFvQZhqZCWIUeASX1M/edit?usp=sharing\"\r\n                  target=\"_blank\"\r\n                >\r\n                  Resume\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem className=\"ml-auto mr-2\">\r\n                <NavLink className=\"appbar-link\" style={{ color: 'black' }} href=\"#\">\r\n                  <Link\r\n                    // onClick={this.toggle}\r\n                    style={{ color: 'black' }}\r\n                    className=\"appbar-link\"\r\n                    to=\"/contact\"\r\n                  >\r\n                    Contact\r\n                  </Link>\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Appbar;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardText } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"row\" style={{ position: 'relative' }}>\r\n      <div className=\"col-12 col-md-4 mx-auto\">\r\n        <Card className=\"about-card\">\r\n          <CardBody>\r\n            <CardText>\r\n              I have always wanted to build something special. But I never trusted myself to because\r\n              I ditched creativity when I failed to create anything noteworthy in elementary school\r\n              art class. From then on I pursued what I felt I easily understood, mostly math.\r\n              Eventually I ended up with a degree in Finance from Rutgers University, but my need to\r\n              make something was not satisfied through spreadsheets. After some time, I took a leap\r\n              of faith and went back to Rutgers Coding Bootcamp. <br /> Now I can build.\r\n            </CardText>\r\n          </CardBody>\r\n        </Card>\r\n        <h4 style={{ textAlign: 'center' }}>About</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"row\" style={{ textAlign: 'center' }}>\r\n      <div className=\"col-12\">\r\n        <footer className=\"footer\">\r\n          <a href=\"https://github.com/kenny1211\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i class=\"fab fa-github fa-2x\" style={{ color: 'black' }} />\r\n          </a>\r\n\r\n          <h6>Kenny Nguyen</h6>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { Tooltip } from 'reactstrap';\r\nimport '../App.css';\r\n\r\nclass PortfolioTooltip extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      tooltipOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span style={{ color: 'black', textAlign: 'center' }} href=\"#\" id=\"TooltipExample\">\r\n          <i className=\"fas fa-question fa-lg quest-icon\" />\r\n        </span>\r\n\r\n        <Tooltip\r\n          style={{ background: 'transparent', color: 'black' }}\r\n          trigger=\"hover\"\r\n          placement=\"top\"\r\n          isOpen={this.state.tooltipOpen}\r\n          target=\"TooltipExample\"\r\n          toggle={this.toggle}\r\n        >\r\n          Only Full Stack Applications are featured in my portfolio, my other projects can be viewed\r\n          via Github below.\r\n        </Tooltip>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PortfolioTooltip;\r\n","import React, { Component } from 'react';\r\nimport projects from '../projects.json';\r\nimport { Card, CardBody, CardTitle, CardLink } from 'reactstrap';\r\nimport PortfolioTooltip from './PortfolioTooltip';\r\n\r\nclass Portfolio extends Component {\r\n  state = {\r\n    projects\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\" style={{ position: 'relative' }}>\r\n          {projects.map(project => {\r\n            return (\r\n              <div className=\"col-12\" style={{ alignContent: 'center', marginTop: '5%' }}>\r\n                <Card\r\n                  key={project.id}\r\n                  style={{ borderColor: 'transparent', background: 'transparent' }}\r\n                >\r\n                  <CardLink\r\n                    style={{ color: 'black', textAlign: 'center' }}\r\n                    href={project.link}\r\n                    target=\"_blank\"\r\n                  >\r\n                    <span\r\n                      className={project.icon}\r\n                      style={{ display: 'inline-block', width: '100%', textAlign: 'center' }}\r\n                    />\r\n                  </CardLink>\r\n                  <CardBody style={{ textAlign: 'center', marginTop: '-1vh' }}>\r\n                    <CardTitle>{project.name}</CardTitle>\r\n                  </CardBody>\r\n                </Card>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\" style={{ textAlign: 'center' }}>\r\n            <PortfolioTooltip />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Card, CardBody, CardTitle } from 'reactstrap';\r\n\r\nconst ContactPage = () => {\r\n  const inputStyle = {\r\n    background: 'transparent',\r\n    borderColor: 'transparent',\r\n    borderBottomColor: 'black'\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 col-md-4 mx-auto\">\r\n        <Card className=\"contact-card\">\r\n          <CardTitle style={{ marginBottom: '-1vh', textAlign: 'center', position: 'relative' }}>\r\n            <h5>Contact Me</h5>\r\n          </CardTitle>\r\n          <CardBody>\r\n            <Form action=\"https://formspree.io/knny.nguyen@gmail.com\" method=\"POST\">\r\n              <FormGroup>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input style={inputStyle} type=\"text\" name=\"name\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input style={inputStyle} type=\"email\" name=\"_replyto\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"message\">Message</Label>\r\n                <Input style={inputStyle} type=\"textarea\" name=\"message\" />\r\n              </FormGroup>\r\n              <FormGroup style={{ textAlign: 'center' }}>\r\n                <Button\r\n                  className=\"btn-sm\"\r\n                  style={{\r\n                    background: 'transparent',\r\n                    color: 'Black',\r\n                    borderColor: 'black'\r\n                  }}\r\n                  type=\"submit\"\r\n                  value=\"Send\"\r\n                >\r\n                  Send\r\n                </Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport Appbar from './components/Appbar';\nimport About from './components/About';\nimport Footer from './components/Footer';\nimport Portfolio from './components/Portfolio';\nimport ContactPage from './components/ContactPage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <div style={{ width: '99vw' }}>\n            <Appbar />\n            <Route exact path=\"/\" component={About} />\n            <Route exact path=\"/portfolio\" component={Portfolio} />\n            <Route exact path=\"/contact\" component={ContactPage} />\n            <Footer />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}